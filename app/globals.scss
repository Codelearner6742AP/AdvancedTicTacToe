@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@mixin sp-layout {
  @media screen and (max-width: 750px) {
    @content;
  }
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background: radial-gradient(ellipse at bottom, #0d1d31 0%, #0c0d13 100%);
  overflow: hidden;
  animation: gradientShift 15s ease-in-out infinite;
}

@keyframes gradientShift {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

.glow-hover {
  transition: text-shadow 0.3s ease-in-out;
  &:hover {
    text-shadow: 0 0 1px white, 0 0 1px white, 0 0 1px white;
    animation: pulse 1.5s infinite;
  }
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

.rounded-image {
  border-radius: 15px;
  transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }
}

.zoom-hover {
  transition: transform 0.3s ease-in-out;
  &:hover {
    transform: scale(1.1);
  }
}

body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

.square {
  width: 100px;
  height: 100px;
  background-color: black;
  border: 1px solid #999;
  float: left;
  font-size: 24px;
  font-weight: bold;
  line-height: 100px;
  text-align: center;
  transition: background-color 0.3s, transform 0.3s;
  &:hover {
    background-color: darkgrey;
    transform: scale(1.1);
    animation: squareGlow 1s infinite alternate;
  }
}

@keyframes squareGlow {
  from {
    box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
  }
  to {
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.8);
  }
}

.board-row:after {
  clear: both;
  content: "";
  display: table;
}

.status {
  margin-bottom: 10px;
  animation: fadeIn 1s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.game {
  //space evenly
  justify-content: space-evenly;
  display: flex;
  gap: 30px; // Adjust the value as needed
  flex-direction: row;
}


.stars {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: -1;
}

.star {
  position: absolute;
  width: 2px;
  height: 2px;
  background: white;
  opacity: 0.5;
  animation: star-animation 50s linear infinite;
}

@keyframes star-animation {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-100vh);
  }
}

// New floating animation for game elements
.game-board, .game-info {
  animation: float 6s ease-in-out infinite;
}
.game-board{
  transform : translateY(-10px);
}
//increase game board size
.game-board{
    //shift entire board to left
    color:white;
}
.game-info{
    //make text color white

    color: white;
}
@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}
@tailwind base;
@tailwind components;
@tailwind utilities;

// ... (previous styles remain unchanged)

// Add this new section at the end of the file

// Moving interconnected lines background
.background-animation {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  overflow: hidden;
}

.line {
  position: absolute;
  width: 1px;
  height: 100%;
  top: 0;
  left: 50%;
  background: rgba(255, 255, 255, 0.1);
  overflow: hidden;

  &::after {
    content: '';
    display: block;
    position: absolute;
    height: 15vh;
    width: 100%;
    top: -50%;
    left: 0;
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, #ffffff 75%, #ffffff 100%);
    animation: drop 7s 0s infinite;
    animation-fill-mode: forwards;
    animation-timing-function: cubic-bezier(0.4, 0.26, 0, 0.97);
  }

  @for $i from 1 through 20 {
    &:nth-child(#{$i}) {
      margin-left: -25% + (random(50) * 1%);

      &::after {
        animation-delay: random(7) + s;
      }
    }
  }
}

@keyframes drop {
  0% {
    top: -50%;
  }
  100% {
    top: 110%;
  }
}

// Add interconnecting effect
.connector {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: -1;

  &::before, &::after {
    content: '';
    position: absolute;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation: connect 15s linear infinite;
  }

  &::after {
    animation-delay: -7.5s;
  }
}

@keyframes connect {
  0%, 100% {
    top: 0%;
    left: 0%;
  }
  25% {
    top: 100%;
    left: 0%;
  }
  50% {
    top: 100%;
    left: 100%;
  }
  75% {
    top: 0%;
    left: 100%;
  }
}

// Ensure the background animation doesn't interfere with content
body {
  position: relative;
  z-index: 1;
}